import { compile as compileDotTemplate } from 'dot';
import commonjs from 'rollup-plugin-commonjs';
import hash from 'rollup-plugin-hash';
import resolve from 'rollup-plugin-node-resolve';
import sourcemaps from 'rollup-plugin-sourcemaps';
import staticSite from 'rollup-plugin-static-site';
import { terser } from 'rollup-plugin-terser';
import { buildConfig } from './build/config';
import { resolveRelativeLibImports, hashTemplateSuffix, isFingerprinted, isLib, isPolyfill, libsImportMap, libsModuleSpecifiers, manifestSuffix, needsCommonJS, relativeLibPath, rollupInput, rollupOutput, useLibSourceMaps } from './build/libs.js';
import { browsersync } from './build/rollup-plugin-browsersync';
import compression from 'compression';
import alias from 'rollup-plugin-alias';
import { deflate } from "pako/dist/pako_deflate";
const rxPaths = {
  "rxjs/util/tryCatch": "rxjs/util/tryCatch",
  "rxjs/util/toSubscriber": "rxjs/util/toSubscriber",
  "rxjs/util/subscribeToResult": "rxjs/util/subscribeToResult",
  "rxjs/util/subscribeToPromise": "rxjs/util/subscribeToPromise",
  "rxjs/util/subscribeToObservable": "rxjs/util/subscribeToObservable",
  "rxjs/util/subscribeToIterable": "rxjs/util/subscribeToIterable",
  "rxjs/util/subscribeToArray": "rxjs/util/subscribeToArray",
  "rxjs/util/subscribeTo": "rxjs/util/subscribeTo",
  "rxjs/util/root": "rxjs/util/root",
  "rxjs/util/pipe": "rxjs/util/pipe",
  "rxjs/util/not": "rxjs/util/not",
  "rxjs/util/noop": "rxjs/util/noop",
  "rxjs/util/isScheduler": "rxjs/util/isScheduler",
  "rxjs/util/isPromise": "rxjs/util/isPromise",
  "rxjs/util/isObservable": "rxjs/util/isObservable",
  "rxjs/util/isObject": "rxjs/util/isObject",
  "rxjs/util/isNumeric": "rxjs/util/isNumeric",
  "rxjs/util/isIterable": "rxjs/util/isIterable",
  "rxjs/util/isFunction": "rxjs/util/isFunction",
  "rxjs/util/isDate": "rxjs/util/isDate",
  "rxjs/util/isArrayLike": "rxjs/util/isArrayLike",
  "rxjs/util/isArray": "rxjs/util/isArray",
  "rxjs/util/identity": "rxjs/util/identity",
  "rxjs/util/hostReportError": "rxjs/util/hostReportError",
  "rxjs/util/errorObject": "rxjs/util/errorObject",
  "rxjs/util/applyMixins": "rxjs/util/applyMixins",
  "rxjs/util/UnsubscriptionError": "rxjs/util/UnsubscriptionError",
  "rxjs/util/TimeoutError": "rxjs/util/TimeoutError",
  "rxjs/util/ObjectUnsubscribedError": "rxjs/util/ObjectUnsubscribedError",
  "rxjs/util/Immediate": "rxjs/util/Immediate",
  "rxjs/util/EmptyError": "rxjs/util/EmptyError",
  "rxjs/util/ArgumentOutOfRangeError": "rxjs/util/ArgumentOutOfRangeError",
  "rxjs/symbol/rxSubscriber": "rxjs",
  "rxjs/symbol/observable": "rxjs",
  "rxjs/symbol/iterator": "rxjs",
  "rxjs/scheduler/queue": "rxjs",
  "rxjs/scheduler/async": "rxjs",
  "rxjs/scheduler/asap": "rxjs",
  "rxjs/scheduler/animationFrame": "rxjs",
  "rxjs/operators/zipAll": "rxjs/operators",
  "rxjs/operators/zip": "rxjs/operators",
  "rxjs/operators/withLatestFrom": "rxjs/operators",
  "rxjs/operators/windowWhen": "rxjs/operators",
  "rxjs/operators/windowToggle": "rxjs/operators",
  "rxjs/operators/windowTime": "rxjs/operators",
  "rxjs/operators/windowCount": "rxjs/operators",
  "rxjs/operators/window": "rxjs/operators",
  "rxjs/operators/toArray": "rxjs/operators",
  "rxjs/operators/timestamp": "rxjs/operators",
  "rxjs/operators/timeoutWith": "rxjs/operators",
  "rxjs/operators/timeout": "rxjs/operators",
  "rxjs/operators/timeInterval": "rxjs/operators",
  "rxjs/operators/throwIfEmpty": "rxjs/operators",
  "rxjs/operators/throttleTime": "rxjs/operators",
  "rxjs/operators/throttle": "rxjs/operators",
  "rxjs/operators/tap": "rxjs/operators",
  "rxjs/operators/takeWhile": "rxjs/operators",
  "rxjs/operators/takeUntil": "rxjs/operators",
  "rxjs/operators/takeLast": "rxjs/operators",
  "rxjs/operators/take": "rxjs/operators",
  "rxjs/operators/switchMapTo": "rxjs/operators",
  "rxjs/operators/switchMap": "rxjs/operators",
  "rxjs/operators/switchAll": "rxjs/operators",
  "rxjs/operators/subscribeOn": "rxjs/operators",
  "rxjs/operators/startWith": "rxjs/operators",
  "rxjs/operators/skipWhile": "rxjs/operators",
  "rxjs/operators/skipUntil": "rxjs/operators",
  "rxjs/operators/skipLast": "rxjs/operators",
  "rxjs/operators/skip": "rxjs/operators",
  "rxjs/operators/single": "rxjs/operators",
  "rxjs/operators/shareReplay": "rxjs/operators",
  "rxjs/operators/share": "rxjs/operators",
  "rxjs/operators/sequenceEqual": "rxjs/operators",
  "rxjs/operators/scan": "rxjs/operators",
  "rxjs/operators/sampleTime": "rxjs/operators",
  "rxjs/operators/sample": "rxjs/operators",
  "rxjs/operators/retryWhen": "rxjs/operators",
  "rxjs/operators/retry": "rxjs/operators",
  "rxjs/operators/repeatWhen": "rxjs/operators",
  "rxjs/operators/repeat": "rxjs/operators",
  "rxjs/operators/refCount": "rxjs/operators",
  "rxjs/operators/reduce": "rxjs/operators",
  "rxjs/operators/race": "rxjs/operators",
  "rxjs/operators/publishReplay": "rxjs/operators",
  "rxjs/operators/publishLast": "rxjs/operators",
  "rxjs/operators/publishBehavior": "rxjs/operators",
  "rxjs/operators/publish": "rxjs/operators",
  "rxjs/operators/pluck": "rxjs/operators",
  "rxjs/operators/partition": "rxjs/operators",
  "rxjs/operators/pairwise": "rxjs/operators",
  "rxjs/operators/onErrorResumeNext": "rxjs/operators",
  "rxjs/operators/observeOn": "rxjs/operators",
  "rxjs/operators/multicast": "rxjs/operators",
  "rxjs/operators/min": "rxjs/operators",
  "rxjs/operators/mergeScan": "rxjs/operators",
  "rxjs/operators/mergeMapTo": "rxjs/operators",
  "rxjs/operators/mergeMap": "rxjs/operators",
  "rxjs/operators/mergeAll": "rxjs/operators",
  "rxjs/operators/merge": "rxjs/operators",
  "rxjs/operators/max": "rxjs/operators",
  "rxjs/operators/materialize": "rxjs/operators",
  "rxjs/operators/mapTo": "rxjs/operators",
  "rxjs/operators/map": "rxjs/operators",
  "rxjs/operators/last": "rxjs/operators",
  "rxjs/operators/isEmpty": "rxjs/operators",
  "rxjs/operators/ignoreElements": "rxjs/operators",
  "rxjs/operators/groupBy": "rxjs/operators",
  "rxjs/operators/first": "rxjs/operators",
  "rxjs/operators/findIndex": "rxjs/operators",
  "rxjs/operators/find": "rxjs/operators",
  "rxjs/operators/finalize": "rxjs/operators",
  "rxjs/operators/filter": "rxjs/operators",
  "rxjs/operators/expand": "rxjs/operators",
  "rxjs/operators/exhaustMap": "rxjs/operators",
  "rxjs/operators/exhaust": "rxjs/operators",
  "rxjs/operators/every": "rxjs/operators",
  "rxjs/operators/elementAt": "rxjs/operators",
  "rxjs/operators/distinctUntilKeyChanged": "rxjs/operators",
  "rxjs/operators/distinctUntilChanged": "rxjs/operators",
  "rxjs/operators/distinct": "rxjs/operatorst",
  "rxjs/operators/dematerialize": "rxjs/operators",
  "rxjs/operators/delayWhen": "rxjs/operators",
  "rxjs/operators/delay": "rxjs/operators",
  "rxjs/operators/defaultIfEmpty": "rxjs/operators",
  "rxjs/operators/debounceTime": "rxjs/operators",
  "rxjs/operators/debounce": "rxjs/operators",
  "rxjs/operators/count": "rxjs/operators",
  "rxjs/operators/concatMapTo": "rxjs/operators",
  "rxjs/operators/concatMap": "rxjs/operators",
  "rxjs/operators/concatAll": "rxjs/operators",
  "rxjs/operators/concat": "rxjs/operators",
  "rxjs/operators/combineLatest": "rxjs/operators",
  "rxjs/operators/combineAll": "rxjs/operators",
  "rxjs/operators/catchError": "rxjs/operators",
  "rxjs/operators/bufferWhen": "rxjs/operators",
  "rxjs/operators/bufferToggle": "rxjs/operators",
  "rxjs/operators/bufferTime": "rxjs/operators",
  "rxjs/operators/bufferCount": "rxjs/operators",
  "rxjs/operators/buffer": "rxjs/operators",
  "rxjs/operators/auditTime": "rxjs/operators",
  "rxjs/operators/audit": "rxjs/operators",
  "rxjs/operator/zipAll": "rxjs/operator/zipAll",
  "rxjs/operator/zip": "rxjs/operator/zip",
  "rxjs/operator/withLatestFrom": "rxjs/operator/withLatestFrom",
  "rxjs/operator/windowWhen": "rxjs/operator/windowWhen",
  "rxjs/operator/windowToggle": "rxjs/operator/windowToggle",
  "rxjs/operator/windowTime": "rxjs/operator/windowTime",
  "rxjs/operator/windowCount": "rxjs/operator/windowCount",
  "rxjs/operator/window": "rxjs/operator/window",
  "rxjs/operator/toPromise": "rxjs/operator/toPromise",
  "rxjs/operator/toArray": "rxjs/operator/toArray",
  "rxjs/operator/timestamp": "rxjs/operator/timestamp",
  "rxjs/operator/timeoutWith": "rxjs/operator/timeoutWith",
  "rxjs/operator/timeout": "rxjs/operator/timeout",
  "rxjs/operator/timeInterval": "rxjs/operator/timeInterval",
  "rxjs/operator/throttleTime": "rxjs/operator/throttleTime",
  "rxjs/operator/throttle": "rxjs/operator/throttle",
  "rxjs/operator/takeWhile": "rxjs/operator/takeWhile",
  "rxjs/operator/takeUntil": "rxjs/operator/takeUntil",
  "rxjs/operator/takeLast": "rxjs/operator/takeLast",
  "rxjs/operator/take": "rxjs/operator/take",
  "rxjs/operator/switchMapTo": "rxjs/operator/switchMapTo",
  "rxjs/operator/switchMap": "rxjs/operator/switchMap",
  "rxjs/operator/switch": "rxjs/operator/switch",
  "rxjs/operator/subscribeOn": "rxjs/operator/subscribeOn",
  "rxjs/operator/startWith": "rxjs/operator/startWith",
  "rxjs/operator/skipWhile": "rxjs/operator/skipWhile",
  "rxjs/operator/skipUntil": "rxjs/operator/skipUntil",
  "rxjs/operator/skipLast": "rxjs/operator/skipLast",
  "rxjs/operator/skip": "rxjs/operator/skip",
  "rxjs/operator/single": "rxjs/operator/single",
  "rxjs/operator/shareReplay": "rxjs/operator/shareReplay",
  "rxjs/operator/share": "rxjs/operator/share",
  "rxjs/operator/sequenceEqual": "rxjs/operator/sequenceEqual",
  "rxjs/operator/scan": "rxjs/operator/scan",
  "rxjs/operator/sampleTime": "rxjs/operator/sampleTime",
  "rxjs/operator/sample": "rxjs/operator/sample",
  "rxjs/operator/retryWhen": "rxjs/operator/retryWhen",
  "rxjs/operator/retry": "rxjs/operator/retry",
  "rxjs/operator/repeatWhen": "rxjs/operator/repeatWhen",
  "rxjs/operator/repeat": "rxjs/operator/repeat",
  "rxjs/operator/reduce": "rxjs/operator/reduce",
  "rxjs/operator/race": "rxjs/operator/race",
  "rxjs/operator/publishReplay": "rxjs/operator/publishReplay",
  "rxjs/operator/publishLast": "rxjs/operator/publishLast",
  "rxjs/operator/publishBehavior": "rxjs/operator/publishBehavior",
  "rxjs/operator/publish": "rxjs/operator/publish",
  "rxjs/operator/pluck": "rxjs/operator/pluck",
  "rxjs/operator/partition": "rxjs/operator/partition",
  "rxjs/operator/pairwise": "rxjs/operator/pairwise",
  "rxjs/operator/onErrorResumeNext": "rxjs/operator/onErrorResumeNext",
  "rxjs/operator/observeOn": "rxjs/operator/observeOn",
  "rxjs/operator/multicast": "rxjs/operator/multicast",
  "rxjs/operator/min": "rxjs/operator/min",
  "rxjs/operator/mergeScan": "rxjs/operator/mergeScan",
  "rxjs/operator/mergeMapTo": "rxjs/operator/mergeMapTo",
  "rxjs/operator/mergeMap": "rxjs/operator/mergeMap",
  "rxjs/operator/mergeAll": "rxjs/operator/mergeAll",
  "rxjs/operator/merge": "rxjs/operator/merge",
  "rxjs/operator/max": "rxjs/operator/max",
  "rxjs/operator/materialize": "rxjs/operator/materialize",
  "rxjs/operator/mapTo": "rxjs/operator/mapTo",
  "rxjs/operator/map": "rxjs/operator/map",
  "rxjs/operator/let": "rxjs/operator/let",
  "rxjs/operator/last": "rxjs/operator/last",
  "rxjs/operator/isEmpty": "rxjs/operator/isEmpty",
  "rxjs/operator/ignoreElements": "rxjs/operator/ignoreElements",
  "rxjs/operator/groupBy": "rxjs/operator/groupBy",
  "rxjs/operator/first": "rxjs/operator/first",
  "rxjs/operator/findIndex": "rxjs/operator/findIndex",
  "rxjs/operator/find": "rxjs/operator/find",
  "rxjs/operator/finally": "rxjs/operator/finally",
  "rxjs/operator/filter": "rxjs/operator/filter",
  "rxjs/operator/expand": "rxjs/operator/expand",
  "rxjs/operator/exhaustMap": "rxjs/operator/exhaustMap",
  "rxjs/operator/exhaust": "rxjs/operator/exhaust",
  "rxjs/operator/every": "rxjs/operator/every",
  "rxjs/operator/elementAt": "rxjs/operator/elementAt",
  "rxjs/operator/do": "rxjs/operator/do",
  "rxjs/operator/distinctUntilKeyChanged": "rxjs/operator/distinctUntilKeyChanged",
  "rxjs/operator/distinctUntilChanged": "rxjs/operator/distinctUntilChanged",
  "rxjs/operator/distinct": "rxjs/operator/distinct",
  "rxjs/operator/dematerialize": "rxjs/operator/dematerialize",
  "rxjs/operator/delayWhen": "rxjs/operator/delayWhen",
  "rxjs/operator/delay": "rxjs/operator/delay",
  "rxjs/operator/defaultIfEmpty": "rxjs/operator/defaultIfEmpty",
  "rxjs/operator/debounceTime": "rxjs/operator/debounceTime",
  "rxjs/operator/debounce": "rxjs/operator/debounce",
  "rxjs/operator/count": "rxjs/operator/count",
  "rxjs/operator/concatMapTo": "rxjs/operator/concatMapTo",
  "rxjs/operator/concatMap": "rxjs/operator/concatMap",
  "rxjs/operator/concatAll": "rxjs/operator/concatAll",
  "rxjs/operator/concat": "rxjs/operator/concat",
  "rxjs/operator/combineLatest": "rxjs/operator/combineLatest",
  "rxjs/operator/combineAll": "rxjs/operator/combineAll",
  "rxjs/operator/catch": "rxjs/operator/catch",
  "rxjs/operator/bufferWhen": "rxjs/operator/bufferWhen",
  "rxjs/operator/bufferToggle": "rxjs/operator/bufferToggle",
  "rxjs/operator/bufferTime": "rxjs/operator/bufferTime",
  "rxjs/operator/bufferCount": "rxjs/operator/bufferCount",
  "rxjs/operator/buffer": "rxjs/operator/buffer",
  "rxjs/operator/auditTime": "rxjs/operator/auditTime",
  "rxjs/operator/audit": "rxjs/operator/audit",
  "rxjs/observable/zip": "rxjs",
  "rxjs/observable/using": "rxjs",
  "rxjs/observable/timer": "rxjs",
  "rxjs/observable/throw": "rxjs",
  "rxjs/observable/range": "rxjs",
  "rxjs/observable/race": "rxjs",
  "rxjs/observable/pairs": "rxjs",
  "rxjs/observable/onErrorResumeNext": "rxjs",
  "rxjs/observable/of": "rxjs",
  "rxjs/observable/never": "rxjs",
  "rxjs/observable/merge": "rxjs",
  "rxjs/observable/interval": "rxjs",
  "rxjs/observable/if": "rxjs",
  "rxjs/observable/generate": "rxjs",
  "rxjs/observable/fromPromise": "rxjs",
  "rxjs/observable/fromIterable": "rxjs",
  "rxjs/observable/fromEventPattern": "rxjs",
  "rxjs/observable/fromEvent": "rxjs",
  "rxjs/observable/fromArray": "rxjs",
  "rxjs/observable/from": "rxjs",
  "rxjs/observable/forkJoin": "rxjs",
  "rxjs/observable/empty": "rxjs",
  "rxjs/observable/dom/webSocket": "rxjs",
  "rxjs/observable/dom/ajax": "rxjs",
  "rxjs/observable/dom/WebSocketSubject": "rxjs",
  "rxjs/observable/dom/AjaxObservable": "rxjs",
  "rxjs/observable/defer": "rxjs",
  "rxjs/observable/concat": "rxjs",
  "rxjs/observable/combineLatest": "rxjs",
  "rxjs/observable/bindNodeCallback": "rxjs",
  "rxjs/observable/bindCallback": "rxjs",
  "rxjs/observable/UsingObservable": "rxjs",
  "rxjs/observable/TimerObservable": "rxjs",
  "rxjs/observable/SubscribeOnObservable": "rxjs",
  "rxjs/observable/ScalarObservable": "rxjs",
  "rxjs/observable/RangeObservable": "rxjs",
  "rxjs/observable/PromiseObservable": "rxjs",
  "rxjs/observable/PairsObservable": "rxjs",
  "rxjs/observable/NeverObservable": "rxjs",
  "rxjs/observable/IteratorObservable": "rxjs",
  "rxjs/observable/IntervalObservable": "rxjs",
  "rxjs/observable/IfObservable": "rxjs",
  "rxjs/observable/GenerateObservable": "rxjs",
  "rxjs/observable/FromObservable": "rxjs",
  "rxjs/observable/FromEventPatternObservable": "rxjs",
  "rxjs/observable/FromEventObservable": "rxjs",
  "rxjs/observable/ForkJoinObservable": "rxjs",
  "rxjs/observable/ErrorObservable": "rxjs",
  "rxjs/observable/EmptyObservable": "rxjs",
  "rxjs/observable/DeferObservable": "rxjs",
  "rxjs/observable/ConnectableObservable": "rxjs",
  "rxjs/observable/BoundNodeCallbackObservable": "rxjs",
  "rxjs/observable/BoundCallbackObservable": "rxjs",
  "rxjs/observable/ArrayObservable": "rxjs",
  "rxjs/observable/ArrayLikeObservable": "rxjs",
  "rxjs/interfaces": "rxjs/interfaces",
  "rxjs/add/operator/zipAll": "rxjs/add/operator/zipAll",
  "rxjs/add/operator/zip": "rxjs/add/operator/zip",
  "rxjs/add/operator/withLatestFrom": "rxjs/add/operator/withLatestFrom",
  "rxjs/add/operator/windowWhen": "rxjs/add/operator/windowWhen",
  "rxjs/add/operator/windowToggle": "rxjs/add/operator/windowToggle",
  "rxjs/add/operator/windowTime": "rxjs/add/operator/windowTime",
  "rxjs/add/operator/windowCount": "rxjs/add/operator/windowCount",
  "rxjs/add/operator/window": "rxjs/add/operator/window",
  "rxjs/add/operator/toPromise": "rxjs/add/operator/toPromise",
  "rxjs/add/operator/toArray": "rxjs/add/operator/toArray",
  "rxjs/add/operator/timestamp": "rxjs/add/operator/timestamp",
  "rxjs/add/operator/timeoutWith": "rxjs/add/operator/timeoutWith",
  "rxjs/add/operator/timeout": "rxjs/add/operator/timeout",
  "rxjs/add/operator/timeInterval": "rxjs/add/operator/timeInterval",
  "rxjs/add/operator/throttleTime": "rxjs/add/operator/throttleTime",
  "rxjs/add/operator/throttle": "rxjs/add/operator/throttle",
  "rxjs/add/operator/takeWhile": "rxjs/add/operator/takeWhile",
  "rxjs/add/operator/takeUntil": "rxjs/add/operator/takeUntil",
  "rxjs/add/operator/takeLast": "rxjs/add/operator/takeLast",
  "rxjs/add/operator/take": "rxjs/add/operator/take",
  "rxjs/add/operator/switchMapTo": "rxjs/add/operator/switchMapTo",
  "rxjs/add/operator/switchMap": "rxjs/add/operator/switchMap",
  "rxjs/add/operator/switch": "rxjs/add/operator/switch",
  "rxjs/add/operator/subscribeOn": "rxjs/add/operator/subscribeOn",
  "rxjs/add/operator/startWith": "rxjs/add/operator/startWith",
  "rxjs/add/operator/skipWhile": "rxjs/add/operator/skipWhile",
  "rxjs/add/operator/skipUntil": "rxjs/add/operator/skipUntil",
  "rxjs/add/operator/skipLast": "rxjs/add/operator/skipLast",
  "rxjs/add/operator/skip": "rxjs/add/operator/skip",
  "rxjs/add/operator/single": "rxjs/add/operator/single",
  "rxjs/add/operator/shareReplay": "rxjs/add/operator/shareReplay",
  "rxjs/add/operator/share": "rxjs/add/operator/share",
  "rxjs/add/operator/sequenceEqual": "rxjs/add/operator/sequenceEqual",
  "rxjs/add/operator/scan": "rxjs/add/operator/scan",
  "rxjs/add/operator/sampleTime": "rxjs/add/operator/sampleTime",
  "rxjs/add/operator/sample": "rxjs/add/operator/sample",
  "rxjs/add/operator/retryWhen": "rxjs/add/operator/retryWhen",
  "rxjs/add/operator/retry": "rxjs/add/operator/retry",
  "rxjs/add/operator/repeatWhen": "rxjs/add/operator/repeatWhen",
  "rxjs/add/operator/repeat": "rxjs/add/operator/repeat",
  "rxjs/add/operator/reduce": "rxjs/add/operator/reduce",
  "rxjs/add/operator/race": "rxjs/add/operator/race",
  "rxjs/add/operator/publishReplay": "rxjs/add/operator/publishReplay",
  "rxjs/add/operator/publishLast": "rxjs/add/operator/publishLast",
  "rxjs/add/operator/publishBehavior": "rxjs/add/operator/publishBehavior",
  "rxjs/add/operator/publish": "rxjs/add/operator/publish",
  "rxjs/add/operator/pluck": "rxjs/add/operator/pluck",
  "rxjs/add/operator/partition": "rxjs/add/operator/partition",
  "rxjs/add/operator/pairwise": "rxjs/add/operator/pairwise",
  "rxjs/add/operator/onErrorResumeNext": "rxjs/add/operator/onErrorResumeNext",
  "rxjs/add/operator/observeOn": "rxjs/add/operator/observeOn",
  "rxjs/add/operator/multicast": "rxjs/add/operator/multicast",
  "rxjs/add/operator/min": "rxjs/add/operator/min",
  "rxjs/add/operator/mergeScan": "rxjs/add/operator/mergeScan",
  "rxjs/add/operator/mergeMapTo": "rxjs/add/operator/mergeMapTo",
  "rxjs/add/operator/mergeMap": "rxjs/add/operator/mergeMap",
  "rxjs/add/operator/mergeAll": "rxjs/add/operator/mergeAll",
  "rxjs/add/operator/merge": "rxjs/add/operator/merge",
  "rxjs/add/operator/max": "rxjs/add/operator/max",
  "rxjs/add/operator/materialize": "rxjs/add/operator/materialize",
  "rxjs/add/operator/mapTo": "rxjs/add/operator/mapTo",
  "rxjs/add/operator/map": "rxjs/add/operator/map",
  "rxjs/add/operator/let": "rxjs/add/operator/let",
  "rxjs/add/operator/last": "rxjs/add/operator/last",
  "rxjs/add/operator/isEmpty": "rxjs/add/operator/isEmpty",
  "rxjs/add/operator/ignoreElements": "rxjs/add/operator/ignoreElements",
  "rxjs/add/operator/groupBy": "rxjs/add/operator/groupBy",
  "rxjs/add/operator/first": "rxjs/add/operator/first",
  "rxjs/add/operator/findIndex": "rxjs/add/operator/findIndex",
  "rxjs/add/operator/find": "rxjs/add/operator/find",
  "rxjs/add/operator/finally": "rxjs/add/operator/finally",
  "rxjs/add/operator/filter": "rxjs/add/operator/filter",
  "rxjs/add/operator/expand": "rxjs/add/operator/expand",
  "rxjs/add/operator/exhaustMap": "rxjs/add/operator/exhaustMap",
  "rxjs/add/operator/exhaust": "rxjs/add/operator/exhaust",
  "rxjs/add/operator/every": "rxjs/add/operator/every",
  "rxjs/add/operator/elementAt": "rxjs/add/operator/elementAt",
  "rxjs/add/operator/do": "rxjs/add/operator/do",
  "rxjs/add/operator/distinctUntilKeyChanged": "rxjs/add/operator/distinctUntilKeyChanged",
  "rxjs/add/operator/distinctUntilChanged": "rxjs/add/operator/distinctUntilChanged",
  "rxjs/add/operator/distinct": "rxjs/add/operator/distinct",
  "rxjs/add/operator/dematerialize": "rxjs/add/operator/dematerialize",
  "rxjs/add/operator/delayWhen": "rxjs/add/operator/delayWhen",
  "rxjs/add/operator/delay": "rxjs/add/operator/delay",
  "rxjs/add/operator/defaultIfEmpty": "rxjs/add/operator/defaultIfEmpty",
  "rxjs/add/operator/debounceTime": "rxjs/add/operator/debounceTime",
  "rxjs/add/operator/debounce": "rxjs/add/operator/debounce",
  "rxjs/add/operator/count": "rxjs/add/operator/count",
  "rxjs/add/operator/concatMapTo": "rxjs/add/operator/concatMapTo",
  "rxjs/add/operator/concatMap": "rxjs/add/operator/concatMap",
  "rxjs/add/operator/concatAll": "rxjs/add/operator/concatAll",
  "rxjs/add/operator/concat": "rxjs/add/operator/concat",
  "rxjs/add/operator/combineLatest": "rxjs/add/operator/combineLatest",
  "rxjs/add/operator/combineAll": "rxjs/add/operator/combineAll",
  "rxjs/add/operator/catch": "rxjs/add/operator/catch",
  "rxjs/add/operator/bufferWhen": "rxjs/add/operator/bufferWhen",
  "rxjs/add/operator/bufferToggle": "rxjs/add/operator/bufferToggle",
  "rxjs/add/operator/bufferTime": "rxjs/add/operator/bufferTime",
  "rxjs/add/operator/bufferCount": "rxjs/add/operator/bufferCount",
  "rxjs/add/operator/buffer": "rxjs/add/operator/buffer",
  "rxjs/add/operator/auditTime": "rxjs/add/operator/auditTime",
  "rxjs/add/operator/audit": "rxjs/add/operator/audit",
  "rxjs/add/observable/zip": "rxjs/add/observable/zip",
  "rxjs/add/observable/using": "rxjs/add/observable/using",
  "rxjs/add/observable/timer": "rxjs/add/observable/timer",
  "rxjs/add/observable/throw": "rxjs/add/observable/throw",
  "rxjs/add/observable/range": "rxjs/add/observable/range",
  "rxjs/add/observable/race": "rxjs/add/observable/race",
  "rxjs/add/observable/pairs": "rxjs/add/observable/pairs",
  "rxjs/add/observable/onErrorResumeNext": "rxjs/add/observable/onErrorResumeNext",
  "rxjs/add/observable/of": "rxjs/add/observable/of",
  "rxjs/add/observable/never": "rxjs/add/observable/never",
  "rxjs/add/observable/merge": "rxjs/add/observable/merge",
  "rxjs/add/observable/interval": "rxjs/add/observable/interval",
  "rxjs/add/observable/if": "rxjs/add/observable/if",
  "rxjs/add/observable/generate": "rxjs/add/observable/generate",
  "rxjs/add/observable/fromPromise": "rxjs/add/observable/fromPromise",
  "rxjs/add/observable/fromEventPattern": "rxjs/add/observable/fromEventPattern",
  "rxjs/add/observable/fromEvent": "rxjs/add/observable/fromEvent",
  "rxjs/add/observable/from": "rxjs/add/observable/from",
  "rxjs/add/observable/forkJoin": "rxjs/add/observable/forkJoin",
  "rxjs/add/observable/empty": "rxjs/add/observable/empty",
  "rxjs/add/observable/dom/webSocket": "rxjs/add/observable/dom/webSocket",
  "rxjs/add/observable/dom/ajax": "rxjs/add/observable/dom/ajax",
  "rxjs/add/observable/defer": "rxjs/add/observable/defer",
  "rxjs/add/observable/concat": "rxjs/add/observable/concat",
  "rxjs/add/observable/combineLatest": "rxjs/add/observable/combineLatest",
  "rxjs/add/observable/bindNodeCallback": "rxjs/add/observable/bindNodeCallback",
  "rxjs/add/observable/bindCallback": "rxjs/add/observable/bindCallback",
  "rxjs/Subscription": "rxjs",
  "rxjs/Subscriber": "rxjs",
  "rxjs/SubjectSubscription": "rxjs",
  "rxjs/Subject": "rxjs",
  "rxjs/Scheduler": "rxjs",
  "rxjs/Rx": "rxjs",
  "rxjs/ReplaySubject": "rxjs",
  "rxjs/OuterSubscriber": "rxjs",
  "rxjs/Operator": "rxjs",
  "rxjs/Observer": "rxjs",
  "rxjs/Observable": "rxjs",
  "rxjs/Notification": "rxjs",
  "rxjs/InnerSubscriber": "rxjs",
  "rxjs/BehaviorSubject": "rxjs",
  "rxjs/AsyncSubject": "rxjs"
  // "pako/dist/pako_deflate":"pako"
};
export default libsModuleSpecifiers.map(ms => {
  return {
    input: rollupInput(ms),
    output: [{
      file: rollupOutput(ms),
      format: isPolyfill(ms) ? 'iife' : (buildConfig.format || 'system'),
      sourcemap: true
    }],
    plugins: [
      // alias({
      //   'rxjs/BehaviorSubject':'rxjs',
      //   'rxjs/Subject':'rxjs',
      //   'rxjs/operators/skip':'rxjs/operators',
      //   'rxjs/operators/map':'rxjs/operators',
      //   'rxjs/operators/tap':'rxjs/operators',
      //   'rxjs/operators/filter':'rxjs/operators',
      //   'rxjs/operators/auditTime':'rxjs/operators',
      //   'rxjs/observable/fromEvent':'rxjs',
      //   'rxjs/observable/merge':'rxjs',
      //   'rxjs/observable/fromPromise':'rxjs'
      // }),
      alias(rxPaths),
      useLibSourceMaps(ms) && sourcemaps(),
      resolveRelativeLibImports,
      resolve({
        jsnext: true,
        main: true,
        browser: true
      }),
      commonjs({
        //See project.config.ts to extend
        include: ['node_modules/**'],
        namedExports:  {
          'node_modules/pako/dist/pako_deflate.js': [ 'deflate' ]
        }
      }),
      buildConfig.uglify && terser(),
      buildConfig.hash && hash({
        dest: rollupOutput(ms, hashTemplateSuffix),
        manifest: rollupOutput(ms, manifestSuffix)
      }),
      buildConfig.indexHtml && ms === 'main' && staticSite({
        dir: buildConfig.dist,
        template: {
          // We use the default template engine of staticSite plugin but provide it as custom function
          // to prevent injection of the bundle as script tag (we need to load it by import()).
          func: (templateStr, templateData) => compileDotTemplate(templateStr)(templateData),
          path: buildConfig.indexHtmlTemplate,
          data: {
            // the following must be functions since (some of) the manfifests are written during the build
            // but the plugin is configured earlier (when this rollup config is exported).
            polyfillsPath: () => relativeLibPath('polyfills'),
            importMap: () => JSON.stringify(libsImportMap())
          }
        }
      }),
      //TODO: Watch other bundles than main? But index.html must be available before starting browsersync...
      buildConfig.serve && ms === 'main' && browsersync({
        server: buildConfig.dist,
        host: 'localhost',
        port: 5000,
        //as long as https://github.com/BrowserSync/browser-sync/issues/1517 is not resolved, node's native http2 cannot be used
        //and the installed http2 neither :-(
        //httpModule: 'http2',
        //https: {
        //  key: './build/localhost.key',
        //  cert: './build/localhost.crt'
        //},
        middleware: [
          function (req, res, next) {
            //Cache fingerprinted resources 'forever'
            if (isFingerprinted(req.originalUrl)) {
              res.setHeader('Cache-Control', 'max-age=31536000');
            }
            console.log(req.originalUrl);
            next();
          },
          //See https://github.com/BrowserSync/browser-sync/issues/451
          compression()
        ]
      })
    ],
    //All other libs are externals to this lib
    external: otherMs => otherMs !== ms && isLib(otherMs)
  }
});
